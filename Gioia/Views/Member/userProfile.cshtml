@model IEnumerable<Gioia.Models.Posts>
@{
    ViewBag.Title = "userProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>

    .buttonStyle {
        display: inline-block;
    }
    /*body {
            margin-top: 50px;
            background-color: #0191C8;
        }*/

    .comment-main {
        background-color: #74C2E1;
        /*box-shadow: 1px 2px 6px 2px #005B9A;*/
    }

        .comment-main ul {
            list-style: none;
        }

    .sub-cmt-img {
        width: 55px !important;
        height: 55px !important;
        border-radius: 50%;
    }

    .main-cmt-img {
        width: 40px !important;
        height: 40px !important;
        border-radius: 50%;
    }

    .border-bottom {
        font-size: 13px;
        border-bottom: 1px solid #d3d3d3;
    }

    .user-comment {
        background-color: white !important;
        box-shadow: 0px 5px 8px -4px #c1c1c1;
        margin-bottom: 15px;
        margin-top: 15px;
        width: 80.33333333%;
        /*margin-left:10px;*/
    }

        .user-comment-desc, .user-comment span {
            color: #a0a0a0;
        }

            .user-comment-desc p {
                font-size: 12px;
                display: inline-block;
                float: left;
            }

    .send-icon i {
        font-size: 20px;
        background: #f3f3f3;
        padding: 6px 5px;
        border-radius: 50%;
        color: #74C2E1;
        height: 35px;
        width: 35px;
    }

    .user-comment:before {
        content: "";
        height: 0;
        width: 0;
        top: 0;
        left: -10px;
        position: absolute;
        border-style: solid;
        border-width: 13px 0 0 13px;
        border-color: white transparent transparent transparent;
    }
</style>
<div class="container col-sm-offset-2 center-block dis-inline-block" style="margin-top:100px;">
    <div class="row">
        <div class="col-sm-3 border col-sm-offset-4 display-container dis-inline-block">
            @{
                

                var item = Model.FirstOrDefault();

                if (item.ApplicationUser.Image!= null)
                {
                    var base64 = Convert.ToBase64String(item.ApplicationUser.Image);
                    var imgSrc = String.Format("data:image/png;base64,{0}", base64);
                    <img src="@imgSrc" class="img-responsive img-circle center-block " />
                    }
                    else
                    {
                    <img src="~/images/inside-out-characters/gioiauser.jpg" class="img-responsive img-circle center-block" />


                    }

            }
            @{ 
                
                var fullName = item.ApplicationUser.Fname + " " + item.ApplicationUser.Lname;}
            <div class="caption"> <label style="font-size:25px;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;margin-left:28px;">@fullName </label></div>
        </div>
    </div>
</div>

<div class=" col-sm-offset-4 dis-inline-block buttonStyle" style="margin-top:15px;">



    @{

        //add friend
        if (TempData["state"].ToString() == "None")
        {

            <table>
                <tr>
                    <th style="padding-bottom:20px;padding-top:10px; ">
                        @using (Html.BeginForm("AddFriend", "Member"))
                        {

                            <button name="submit" class="btn btn-success buttonStyle" type="submit" value="@item.ApplicationUser.Id">Add Friend</button>


                        }
                    </th>
                    <th style="padding-bottom:20px;padding-top:10px; ">
                        @using (Html.BeginForm("Block", "Member"))
                        {

                            <button name="submit" class="btn btn-primary buttonStyle" type="submit" value="@item.ApplicationUser.Id">Block</button>


                        }

                    </th>
                </tr>
            </table>

        }
        //cancel request
        else if (TempData["state"].ToString() == "Cancel Request")
        {

            <table>
                <tr>
                    @if (item.ApplicationUser.Id == TempData["userId"].ToString())
                    {
                        <th style="padding-bottom:20px;padding-top:10px; ">
                            @using (Html.BeginForm("Accept", "Member"))
                            {

                                <button name="submit" class="btn btn-success buttonStyle" type="submit" value="@item.ApplicationUser.Id">Accept</button>


                            }
                        </th>
                    }

                    <th style="padding-bottom:20px;padding-top:10px; ">
                        @using (Html.BeginForm("CancelRequest", "Member"))
                        {

                            <button name="submit" class="btn btn-primary buttonStyle" type="submit" value="@item.ApplicationUser.Id">Cancel Request</button>


                        }
                    </th>
                    <th style="padding-bottom:20px;padding-top:10px; ">
                        @using (Html.BeginForm("Block", "Member"))
                        {

                            <button name="submit" class="btn btn-primary buttonStyle" type="submit" value="@item.ApplicationUser.Id">Block</button>


                        }
                    </th>
                </tr>
            </table>
        }

        else if (TempData["state"].ToString() == "Accepted")
        {

            <table>
                <tr>
                    <th style="padding-bottom:20px;padding-top:10px; ">

                        @using (Html.BeginForm("CancelRequest", "Member"))
                        {

                            <button name="submit" class="btn btn-primary buttonStyle" type="submit" value="@item.ApplicationUser.Id">Unfriend</button>


                        }
                    </th>
                    <th style="padding-bottom:20px;padding-top:10px; ">
                        @using (Html.BeginForm("Block", "Member"))
                        {

                            <button name="submit" class="btn btn-primary buttonStyle" type="submit" value="@item.ApplicationUser.Id">Block</button>


                        }
                    </th>



                </tr>
            </table>


        }

        <div class=" dis-inline-block buttonStyle">
            @{

                if (TempData["state"].ToString() == "Blocked")
                {
                    using (Html.BeginForm("CancelRequest", "Member"))
                    {

                        <button name="submit" class="btn btn-primary buttonStyle" type="submit" value="@item.ApplicationUser.Id">UnBlock</button>


                    }



                }

                @*if (TempData["state"].ToString() != "Blocked")
                        {

                            using (Html.BeginForm("Block", "Member"))
                            {

                                <button name="submit" class="btn btn-primary buttonStyle" type="submit" value="@Model.Id">Block</button>


                        }
                    }*@
            }


        </div>
    }

    <p style="display:inline-block">
        @Html.ActionLink("What's In Your Mind?", "Create","Posts")

    </p>

    @using (Html.BeginForm("AddLike", "Posts", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <table class="table">
            @foreach (var items in Model.Select(p => new { p.moodId, p.post, p.PostComments, p.postId, p.PostLike, p.time, p.userId, p.ApplicationUser.Fname }))
            {
                <tr>
                    <td style="box-shadow: 1px 2px 6px 2px #005B9A;margin-bottom:10px;border-radius:3px;text-align:center;padding-top:15px;padding-left:20px;" class="spacer">
                        <div class="col-xs-10 " style="color:#113f8d;font-weight:bold; background-color:#f3f3f3;border-radius:3px;padding-top:10px; width:98%;margin-bottom:10px">
                            <div>
                                <div class="col-xs-12 col-xs-offset-5">
                                    @*@Html.ActionLink("Edit", "EditPost", new { postId = item.postId, post = item.post, userId = item.userId, moodId = item.moodId, time = item.time })

                                        <span class="glyphicon glyphicon-edit"></span>
                                        @Html.ActionLink("Delete", "Deletepost", new { postId = item.postId })
                                        <span class="glyphicon glyphicon-remove"></span>*@
                                </div>
                                <div style="border-radius:100%;background-color:#5987ab;width:100px;height:100px;color:#ffffff;font-weight:bold;text-align:center;padding-top:40px; " class="col-xs-offset-2">
                                    @Html.DisplayFor(modelItem => items.Fname)

                                </div>
                                <div style="padding-top:0px;padding-bottom:20px;display:inline-block" class="col-xs-12">
                                    <span class="float-right" style="padding-left:500px;font-weight:normal">
                                        <i class="fa fa-clock-o mr-1" aria-hidden="true"></i> @Html.DisplayFor(modelItem => items.time)<br />

                                    </span>
                                </div>
                            </div>
                            <div>
                                @Html.DisplayFor(modelItem => items.post, new { style = "word-break: break-all;" })
                            </div>
                            @*@Html.LabelFor(modelItem => item.PostLike.Count ,new { value = item.PostLike.Count } )Like<br />*@

                            @Html.DisplayFor(modelItem => items.PostLike.Count)Like<br />

                            <span><i class="fa fa-thumbs-up mr-1" aria-hidden="true"></i></span>
                            @Html.ActionLink("Like", "AddLike","Posts", new { id = items.postId },null)
                            @Html.ActionLink("Comment", "AddComment","Posts" ,new { id = items.postId },null)


                            @{


                                if (item.PostComments.Count > 0)
                                {
                                    <div class="col-xs-10 offset-xs-1  comment-main rounded" style="background-color:#f3f3f3 ;width:100%">
                                        <ul class="p-0">

                                            @foreach (var comm in items.PostComments.Select(a => new { a.comment, a.id, a.ApplicationUser.Fname, a.userId, a.postId }))
                                            {
                                                <li>
                                                    <div class="row comment-box p-1 pt-3 pr-4">
                                                        <div class="col-xs-12 col-xs-offset-5">
                                                            @Html.ActionLink("Edit", "EditComment", new { id = comm.id, comment = comm.comment, userId = comm.userId, postId = comm.postId })
                                                            @* <a href="/Posts/EditComment/" id="commentId">*@
                                                            @*<a href= "@Url.Action("EditComment", "Posts")" id="commentId">*@

                                                            <span class="glyphicon glyphicon-edit"></span>
                                                            @* </a>*@
                                                            @* @Html.ActionLink("Posts", "EditComment", new { @class = "glyphicon glyphicon-remove" })*@
                                                            @Html.ActionLink("Delete", "DeleteComment", new { id = comm.id })
                                                            @*<a href="#">*@
                                                            <span class="glyphicon glyphicon-remove"></span>
                                                            @*</a>*@
                                                        </div>

                                                        <div class="col-xs-2 col-3 user-img text-center" style="color:#113f8d;font-weight:bold;">
                                                            <img src="~/images/inside-out-characters/Joy_inside_out_characters.png" style="width:40px;" />
                                                            @Html.DisplayFor(modelItem => comm.Fname)
                                                            @*<img src="/demo/man-profile.jpg" class="main-cmt-img">*@
                                                        </div>
                                                        <div class="col-xs-10 col-9 user-comment bg-light rounded pb-1">
                                                            <div class="row" style="margin:10px;">
                                                                <div class="col-xs-8 col-6" style="margin:10px;">
                                                                    <p class="w-100 p-2 m-0" style="word-break: break-all;color:#113f8d;">  @Html.Label(comm.comment)</p>
                                                                </div>
                                                                @*<div class="col-lg-4 col-6 border-bottom">
                                                                        <p class="w-100 p-2 m-0"><span class="float-right"><i class="fa fa-clock-o mr-1" aria-hidden="true"></i>01 : 00</span></p>
                                                                    </div>*@
                                                            </div>

                                                        </div>
                                                    </div>
                                                </li>
                                                @*<div class="alert-info" style="border-radius:10px;border-color:#5987ab;margin-bottom:10px;">
                                                        @Html.Label(comm)
                                                    </div>*@
                                            }
                                        </ul>
                                    </div>
                                }
                            }






                        </div>



                    </td>

                </tr>
            }
        </table>
    }



    


  




