(function (e) { e.fn.charCounter = function (t, n) { function s(s, u) { s = e(s); if (s.val().length > t) { s.val(s.val().substring(0, t)); if (n.pulse && !r) { o(u, true) } } if (n.delay > 0) { if (i) { window.clearTimeout(i) } i = window.setTimeout(function () { u.html(n.format.replace(/%1/, t - s.val().length)) }, n.delay) } else { u.html(n.format.replace(/%1/, t - s.val().length)) } } function o(t, n) { if (r) { window.clearTimeout(r); r = null } t.animate({ opacity: .1 }, 100, function () { e(this).animate({ opacity: 1 }, 100) }); if (n) { r = window.setTimeout(function () { o(t) }, 200) } } t = t || 100; n = e.extend({ container: "<span></span>", classname: "charcounter", format: "%1 chars remaining", pulse: true, delay: 0 }, n); var r, i; return this.each(function () { var t; if (!n.container.match(/^<.+>$/)) { t = e(n.container) } else { e(this).next("." + n.classname).remove(); t = e(n.container).insertAfter(this).addClass(n.classname) } e(this).unbind(".charCounter").bind("keydown.charCounter", function () { s(this, t) }).bind("keypress.charCounter", function () { s(this, t) }).bind("keyup.charCounter", function () { s(this, t) }).bind("focus.charCounter", function () { s(this, t) }).bind("mouseover.charCounter", function () { s(this, t) }).bind("mouseout.charCounter", function () { s(this, t) }).bind("paste.charCounter", function () { var e = this; setTimeout(function () { s(e, t) }, 10) }); if (this.addEventListener) { this.addEventListener("input", function () { s(this, t) }, false) } s(this, t) }) } })(jQuery)